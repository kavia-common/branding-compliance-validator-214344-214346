{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "This file defines the Dashboard component for a React frontend application. It serves as the main user interface for uploading files, viewing job results and flags, previewing items, and initiating downloads with placeholder e-signature and audit trail features.", "external_files": ["../components/UploadPanel", "../utils/errorHandling"], "external_methods": ["formatApiError"], "published": [], "classes": [], "methods": [{"name": "Dashboard({ user })", "description": "Main React component rendering the dashboard interface for uploads, results, preview, and finalization actions.", "scope": "", "scopeKind": ""}, {"name": "onJobStarted", "description": "Callback invoked when a job is started, updates the state with job ID and status, and sets a notice."}, {"name": "mockDownload", "description": "Simulates the download process with an e-sign placeholder and alert for user interaction."}], "calls": ["React.useState", "UploadPanel", "console.debug", "alert"], "search-terms": ["Dashboardjsx", "UploadPanel", "Results & Flags", "Preview", "Finalize", "Role-gated", "E-sign", "Audit Trail", "GxP", "Placeholder"], "state": 2, "file_id": 16, "knowledge_revision": 53, "git_revision": "0e92768c759172b24e12d7bb470e6fb6a736541f", "revision_history": [{"33": ""}, {"51": "0e92768c759172b24e12d7bb470e6fb6a736541f"}, {"53": "0e92768c759172b24e12d7bb470e6fb6a736541f"}], "ctags": [{"_type": "tag", "name": "Dashboard", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/screens/Dashboard.jsx", "pattern": "/^export default function Dashboard({ user }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ user })"}, {"_type": "tag", "name": "jobId", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/screens/Dashboard.jsx", "pattern": "/^  const onJobStarted = ({ jobId, status }) => {$/", "language": "JavaScript", "kind": "field", "scope": "Dashboard.onJobStarted", "scopeKind": "class"}], "hash": "b05ee4e46dc3a1080be3937f10327daf", "format-version": 4, "code-base-name": "branding_compliance_frontend", "filename": "branding_compliance_frontend/src/screens/Dashboard.jsx", "fields": [{"name": "const onJobStarted = ({ jobId, status }) => {", "scope": "Dashboard.onJobStarted", "scopeKind": "class", "description": "unavailable"}]}