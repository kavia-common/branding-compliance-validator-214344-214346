{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "This is a React component file 'Dashboard.jsx' that serves as the main UI screen for a branding compliance validation web application. It handles file uploads, polling job status, displaying results, previews, and download controls within a user interface.", "external_files": ["../components/UploadPanel", "../utils/errorHandling", "../components/ResultsTable", "../hooks/usePollingJobStatus", "../components/PreviewPane", "../api/client", "../components/DownloadBar"], "external_methods": ["formatApiError", "getJson"], "published": ["Dashboard"], "classes": [], "methods": [{"name": "fetchPreviews", "description": "Fetches list of preview images or data related to a specific job ID."}, {"name": "onJobStarted", "description": "Handler invoked when a new upload job is initiated, setting up polling and initial preview fetch."}, {"name": "Dashboard({ user })", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["useState", "useEffect", "useMemo", "getJson", "startPolling", "stopPolling", "fetchPreviews", "setPreviews", "setPreviewsLoading", "setPreviewsError", "formatApiError"], "search-terms": ["Dashboard", "React JSX component", "file upload", "job polling", "previews", "results table", "download bar", "GxP", "auditing", "role gating"], "state": 2, "file_id": 16, "knowledge_revision": 101, "git_revision": "fc17b29ea0587102d65d48ce3ccbc825d21a775a", "revision_history": [{"33": ""}, {"51": "0e92768c759172b24e12d7bb470e6fb6a736541f"}, {"53": "0e92768c759172b24e12d7bb470e6fb6a736541f"}, {"58": "f2fa9c71054b0658fc4b6810ebe9244c62780f76"}, {"59": "f2fa9c71054b0658fc4b6810ebe9244c62780f76"}, {"62": "8330b94e695d6b62e42f29fe0dd901e1904109c8"}, {"63": "8330b94e695d6b62e42f29fe0dd901e1904109c8"}, {"64": "8330b94e695d6b62e42f29fe0dd901e1904109c8"}, {"65": "8330b94e695d6b62e42f29fe0dd901e1904109c8"}, {"67": "e529cbe8b9fbd1fc0eff615e7ce27d69e832273d"}, {"70": "555515b3932600dec2d178fad4e0515e7a97c4ab"}, {"71": "fc17b29ea0587102d65d48ce3ccbc825d21a775a"}, {"101": "fc17b29ea0587102d65d48ce3ccbc825d21a775a"}], "ctags": [{"_type": "tag", "name": "Dashboard", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/screens/Dashboard.jsx", "pattern": "/^export default function Dashboard({ user }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ user })"}, {"_type": "tag", "name": "job", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/screens/Dashboard.jsx", "pattern": "/^              jobId={job?.id || null}$/", "language": "JavaScript", "kind": "field", "scope": "Dashboard.jobId", "scopeKind": "class"}, {"_type": "tag", "name": "jobId", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/screens/Dashboard.jsx", "pattern": "/^  const onJobStarted = ({ jobId, status }) => {$/", "language": "JavaScript", "kind": "field", "scope": "Dashboard.onJobStarted", "scopeKind": "class"}, {"_type": "tag", "name": "preview", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/screens/Dashboard.jsx", "pattern": "/^              selected={preview}$/", "language": "JavaScript", "kind": "field", "scope": "Dashboard.selected", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/screens/Dashboard.jsx", "pattern": "/^              user={user}$/", "language": "JavaScript", "kind": "field", "scope": "Dashboard.user", "scopeKind": "class"}], "hash": "dec0ebea890bca7fedaaecb3506a6b96", "format-version": 4, "code-base-name": "branding_compliance_frontend", "filename": "branding_compliance_frontend/src/screens/Dashboard.jsx", "fields": [{"name": "jobId={job?.id || null}", "scope": "Dashboard.jobId", "scopeKind": "class", "description": "unavailable"}, {"name": "const onJobStarted = ({ jobId, status }) => {", "scope": "Dashboard.onJobStarted", "scopeKind": "class", "description": "unavailable"}, {"name": "selected={preview}", "scope": "Dashboard.selected", "scopeKind": "class", "description": "unavailable"}, {"name": "user={user}", "scope": "Dashboard.user", "scopeKind": "class", "description": "unavailable"}]}