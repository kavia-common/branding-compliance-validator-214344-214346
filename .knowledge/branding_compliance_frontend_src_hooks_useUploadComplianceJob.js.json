{"is_source_file": true, "format": "JavaScript", "description": "This file defines a React hook named useUploadComplianceJob, which facilitates uploading compliance jobs by validating input files, constructing multipart form data, calling a backend API, and handling errors. It manages loading state, error normalization, and exposes a startJob method along with status info.", "external_files": ["../api/client", "../utils/validation", "../utils/errorHandling"], "external_methods": ["postMultipart", "validateUploadPayload", "normalizeApiError"], "published": ["useUploadComplianceJob"], "classes": [], "methods": [{"name": "useUploadComplianceJob()", "description": "A React hook providing functionality to validate, initiate, and monitor an upload compliance job, including error handling and state management.", "parameters": "None", "returns": "An object with startJob method, loading status, error info, and job details.", "scope": "", "scopeKind": ""}], "calls": ["react.useCallback", "react.useMemo", "react.useState", "postMultipart", "validateUploadPayload", "normalizeApiError"], "search-terms": ["useUploadComplianceJob", "React hook", "multipart form data", "file validation", "error normalization", "upload job"], "state": 2, "file_id": 21, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "useUploadComplianceJob", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/hooks/useUploadComplianceJob.js", "pattern": "/^export function useUploadComplianceJob() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}], "hash": "fd8426671165a010d0813880e1f62c49", "format-version": 4, "code-base-name": "branding_compliance_frontend", "filename": "branding_compliance_frontend/src/hooks/useUploadComplianceJob.js", "revision_history": [{"47": ""}]}