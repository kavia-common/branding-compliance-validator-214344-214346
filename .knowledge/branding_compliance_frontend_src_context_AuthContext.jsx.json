{"is_source_file": true, "format": "JavaScript/JSX", "description": "This file defines React context and hooks for authentication management within a React application. It includes context creation, a provider component that manages user authentication state, and a custom hook for consuming authentication data. The code provides mock login/logout functions, session persistence via localStorage, and a stub for electronic signature capture, with emphasis on role-based access control and audit trail considerations.", "external_files": ["react"], "external_methods": ["React.createContext", "React.useCallback", "React.useContext", "React.useEffect", "React.useMemo", "React.useState"], "published": ["AuthContext", "useAuth", "AuthProvider"], "classes": [], "methods": [{"name": "useAuth()", "description": "Hook to consume the AuthContext, providing access to authentication state and actions such as login, logout, and electronic signature capture.", "scope": "", "scopeKind": ""}, {"name": "AuthProvider({ children })", "description": "React component that provides authentication state and methods to its children, managing session persistence and mock authentication procedures.", "scope": "", "scopeKind": ""}, {"name": "login", "description": "Mock login function that creates a pseudo JWT token and updates user state, role, and local storage; also logs a placeholder audit event."}, {"name": "logout", "description": "Clears authentication state and provides audit logging placeholder."}, {"name": "captureESign", "description": "Stub function to simulate electronic signature capture, returning a signature ID and logging an audit event."}], "calls": ["localStorage.getItem", "localStorage.setItem", "localStorage.removeItem", "JSON.parse", "JSON.stringify", "console.debug"], "search-terms": ["AuthContext", "useAuth hook", "AuthProvider component", "session persistence", "role-based access", "e-signature stub", "React context authentication"], "state": 2, "file_id": 28, "knowledge_revision": 73, "git_revision": "", "ctags": [{"_type": "tag", "name": "AuthContext", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/context/AuthContext.jsx", "pattern": "/^const AuthContext = createContext(null);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "AuthProvider", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/context/AuthContext.jsx", "pattern": "/^export function AuthProvider({ children }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ children })"}, {"_type": "tag", "name": "useAuth", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/context/AuthContext.jsx", "pattern": "/^export function useAuth() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/branding-compliance-validator-214344-214346/branding_compliance_frontend/src/context/AuthContext.jsx", "pattern": "/^  return <AuthContext.Provider value={value}>{children}<\\/AuthContext.Provider>;$/", "language": "JavaScript", "kind": "field", "scope": "Provider", "scopeKind": "class"}], "hash": "135c6464369c9c8ac88a694a36de244d", "format-version": 4, "code-base-name": "branding_compliance_frontend", "filename": "branding_compliance_frontend/src/context/AuthContext.jsx", "fields": [{"name": "return <AuthContext.Provider value={value}>{children}<\\/AuthContext.Provider>;", "scope": "Provider", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"73": ""}]}